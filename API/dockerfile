FROM python:3.11-slim AS runtime


# Evitar prompts y reducir tama침o
ENV DEBIAN_FRONTEND=noninteractive \
PIP_NO_CACHE_DIR=1 \
PYTHONDONTWRITEBYTECODE=1 \
PYTHONUNBUFFERED=1


WORKDIR /app


# Dependencias del sistema: ffmpeg (para audio), libgl (opencv),
# espeak-ng (motor TTS para pyttsx3 en Linux), ALSA (audio backend)
RUN apt-get update && apt-get install -y --no-install-recommends \
build-essential \
ffmpeg \
libgl1 \
espeak-ng libespeak-ng1 \
libasound2 \
curl && \
rm -rf /var/lib/apt/lists/*


# Copiamos requirements y luego el c칩digo
COPY requirements.txt ./
RUN pip install -r requirements.txt


# Si vas a usar YOLO con pesos por defecto, ultralytics los descargar치 en runtime.
# Puedes predescargarlos y agregarlos como capa para acelerar el arranque, opcional.


COPY . .


# Puerto del servicio
EXPOSE 8000


# Salud b치sica (opcional)
HEALTHCHECK --interval=30s --timeout=5s --retries=5 CMD curl -fsS http://localhost:8000/ || exit 1


# Uvicorn con 1 worker para WebSockets
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]


# FROM python:3.11-slim
# WORKDIR /app
# RUN apt-get update && apt-get install -y build-essential ffmpeg libgl1 && rm -rf /var/lib/apt/lists/*
# COPY requirements.txt ./
# RUN pip install --no-cache-dir -r requirements.txt
# COPY . .
# EXPOSE 8000
# CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]